# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  unit_tests:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.12.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: ./node_modules/.bin/eslint src/ --max-warnings=0
      - run: NODE_ENV=test yarn build
      - run: |
          yarn add -D bundlesize
          yarn run bundlesize
      - run: yarn test -w 2
      - store_artifacts:
          path: ./jest-coverage
      - persist_to_workspace:
          root: ./
          paths:
            - jest-coverage/
  integration_tests:
    docker:
      - image: circleci/node:11.12.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "package.json" }}
            - deps-
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          paths:
            - node_modules
          key: deps-{{ checksum "package.json" }}
      - setup_remote_docker
      - run:
          name: Setup Docker
          command: |
            docker network create kf-data-stack
            docker run -v bundle:/data --name bundler alpine:latest /bin/true
            docker cp . bundler:/data
            docker-compose pull -q
      - run:
          name: Run Cypress tests
          command: |
            docker-compose up -d web postgres redis scheduler worker app
            sleep 10
            docker-compose up cypress
      - run:
          name: Copy coverage
          command: |
            docker cp project_app_1:/app/cypress-coverage ./
      - store_artifacts:
          path: ./cypress-coverage
      - store_test_results:
          path: ./cypress-coverage
      - persist_to_workspace:
          root: ./
          paths:
            - cypress-coverage/
  coverage:
    docker:
      - image: circleci/node:11.12.0
    steps:
      - attach_workspace:
          at: ~/workspace
      - checkout
      - run:
          name: Merge coverage
          command: |
            mkdir ./coverage
            cp ~/workspace/cypress-coverage/coverage-final.json ./coverage/cypress.json
            cp ~/workspace/jest-coverage/coverage-final.json ./coverage/jest.json
      - run:
          name: Install codecov
          command: yarn add codecov
      - run:
          name: Upload cypress coverage
          command: yarn codecov -f coverage/cypress.json
      - run:
          name: Upload jest coverage
          command: yarn codecov -f coverage/jest.json


workflows:
  version: 2
  tests:
    jobs:
      - unit_tests
      - integration_tests
      - coverage:
          requires:
              - unit_tests
              - integration_tests

